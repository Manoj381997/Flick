{"version":3,"sources":["ng://ngx-scrollbar/lib/scrollbar.component.ts","ng://ngx-scrollbar/lib/scrollbar.module.ts"],"names":["ScrollbarComponent","zone","renderer","document","this","EventEmitter","prototype","ngAfterViewInit","_this","runOutsideAngular","barX","barXRef","nativeElement","barY","barYRef","thumbX","thumbXRef","thumbY","thumbYRef","view","viewRef","hideNativeScrollbars","scrollWorker","_scrollSub$","fromEvent","pipe","tap","e","subscribe","trackX","_barXSub$","barXWorker","_thumbXSub$","startThumbXWorker","trackY","_barYSub$","barYWorker","_thumbYSub$","startThumbYWorker","ngOnDestroy","unsubscribe","scrollXTo","to","duration","of","takeWhile","expand","d","perTick","scrollLeft","setProperty","delay","EMPTY","scrollYTo","scrollTop","scrollToTop","scrollToBottom","scrollHeight","scrollToRight","scrollWidth","scrollToLeft","update","setThumbXPosition","_currXPos","calculateThumbXSize","setThumbYPosition","_currYPos","calculateThumbYSize","_thumbSizeX","clientWidth","_thumbSizeY","clientHeight","_trackLeftMax","_trackTopMax","thumbXPosition","_scrollLeftMax","thumbYPosition","_scrollTopMax","scrollState","emit","target","currentTarget","offsetX","_naturalThumbSizeX","offsetY","_naturalThumbSizeY","mousedown$","mouseup$","mousemove$","onselectstart","map","mousedownEvent","mergeMap","mousedownOffsetX","takeUntil","mousemoveEvent","clientX","mousemoveClientX","offset","getBoundingClientRect","left","scroll","mousedownOffsetY","clientY","mousemoveClientY","top","scrollBoundaries","naturalThumbSize","scrollMax","_minThumbSize","x","width","transform","setStyle","y","height","size","getNativeScrollbarWidth","element","createElement","style","position","overflow","msOverflowStyle","body","appendChild","sw","offsetWidth","removeChild","Component","args","selector","template","styles","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","preserveWhitespaces","NgZone","Renderer2","Inject","DOCUMENT","ViewChild","Input","Output","ScrollbarModule","NgModule","imports","CommonModule","ObserversModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Inject,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  Renderer2,\r\n  ViewEncapsulation,\r\n  NgZone\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Subscription, fromEvent, of, EMPTY } from 'rxjs';\r\nimport { delay, expand, map, mergeMap, takeUntil, takeWhile, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ng-scrollbar',\r\n  template: `<div class=\"ng-scrollbar-container\" [class.ng-scrollbar-autohide]=\"autoHide\">\r\n\r\n  <div #barX class=\"ng-scrollbar -horizontal {{barClass}}\" [class.ng-scrollbar-disabled]=\"!trackX\">\r\n    <div #thumbX class=\"ng-scrollbar-thumb {{thumbClass}}\"></div>\r\n  </div>\r\n\r\n  <div #barY class=\"ng-scrollbar -vertical {{barClass}}\" [class.ng-scrollbar-disabled]=\"!trackY\">\r\n    <div #thumbY class=\"ng-scrollbar-thumb {{thumbClass}}\"></div>\r\n  </div>\r\n\r\n  <div #view class=\"ng-scrollbar-view {{viewClass}}\"\r\n       (cdkObserveContent)=\"update()\"\r\n       [cdkObserveContentDisabled]=\"autoUpdate\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`ng-scrollbar{display:block;position:relative;height:100%;overflow:hidden!important}.ng-scrollbar-container{position:relative;overflow:hidden!important;width:100%;height:100%}.ng-scrollbar-autohide>.ng-scrollbar{opacity:0;transition:opacity 120ms ease-out}.ng-scrollbar-autohide:active>.ng-scrollbar,.ng-scrollbar-autohide:focus>.ng-scrollbar,.ng-scrollbar-autohide:hover>.ng-scrollbar{opacity:1;transition:opacity 340ms ease-out}.ng-scrollbar{position:absolute;right:2px;bottom:2px;z-index:1;border-radius:3px}.-vertical{width:6px;top:2px}.-vertical .ng-scrollbar-thumb{width:100%}.-horizontal{height:6px;left:2px}.-horizontal .ng-scrollbar-thumb{height:100%}.ng-scrollbar-disabled{display:none}.ng-scrollbar-thumb{position:relative;display:block;width:0;height:0;border-radius:inherit;background-color:rgba(0,0,0,.2);-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.ng-scrollbar-thumb:active,.ng-scrollbar-thumb:hover{background-color:rgba(0,0,0,.3)}.ng-scrollbar-view{width:100%;height:100%;overflow:scroll;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);-webkit-overflow-scrolling:touch}`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false\r\n})\r\nexport class ScrollbarComponent implements AfterViewInit, OnDestroy {\r\n\r\n  private _thumbSizeY = 0;\r\n  private _thumbSizeX = 0;\r\n  private _trackTopMax = 0;\r\n  private _trackLeftMax = 0;\r\n  private _scrollLeftMax = 0;\r\n  private _scrollTopMax = 0;\r\n  private _naturalThumbSizeY = 0;\r\n  private _naturalThumbSizeX = 0;\r\n  private _currXPos = 0;\r\n  private _currYPos = 0;\r\n  private _minThumbSize = 20;\r\n  private _scrollSub$: Subscription;\r\n  private _barXSub$: Subscription;\r\n  private _barYSub$: Subscription;\r\n  private _thumbXSub$: Subscription;\r\n  private _thumbYSub$: Subscription;\r\n\r\n  barX: HTMLElement;\r\n  barY: HTMLElement;\r\n  thumbX: HTMLElement;\r\n  thumbY: HTMLElement;\r\n  view: HTMLElement;\r\n\r\n  @ViewChild('barX') barXRef;\r\n  @ViewChild('barY') barYRef;\r\n  @ViewChild('thumbX') thumbXRef;\r\n  @ViewChild('thumbY') thumbYRef;\r\n  @ViewChild('view') viewRef;\r\n\r\n  @Input() autoUpdate = true;\r\n  @Input() autoHide = false;\r\n  @Input() trackX = false;\r\n  @Input() trackY = true;\r\n  @Input() viewClass: string;\r\n  @Input() barClass: string;\r\n  @Input() thumbClass: string;\r\n  @Output() scrollState = new EventEmitter<any>();\r\n\r\n  constructor(private zone: NgZone, private renderer: Renderer2, @Inject(DOCUMENT) private document: any) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n    this.zone.runOutsideAngular(() => {\r\n      this.barX = this.barXRef.nativeElement;\r\n      this.barY = this.barYRef.nativeElement;\r\n      this.thumbX = this.thumbXRef.nativeElement;\r\n      this.thumbY = this.thumbYRef.nativeElement;\r\n      this.view = this.viewRef.nativeElement;\r\n\r\n      this.hideNativeScrollbars();\r\n\r\n      /** Initialize scrollbars */\r\n      this.scrollWorker(null);\r\n\r\n      this._scrollSub$ = fromEvent(this.view, 'scroll').pipe(tap((e) => this.scrollWorker(e))).subscribe();\r\n      if (this.trackX) {\r\n        this._barXSub$ = fromEvent(this.barX, 'mousedown').pipe(tap((e) => this.barXWorker(e))).subscribe();\r\n        this._thumbXSub$ = this.startThumbXWorker();\r\n      }\r\n      if (this.trackY) {\r\n        this._barYSub$ = fromEvent(this.barY, 'mousedown').pipe(tap((e) => this.barYWorker(e))).subscribe();\r\n        this._thumbYSub$ = this.startThumbYWorker();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._scrollSub$) {\r\n      this._scrollSub$.unsubscribe();\r\n    }\r\n    if (this.trackX) {\r\n      this._barXSub$.unsubscribe();\r\n      this._thumbXSub$.unsubscribe();\r\n    }\r\n    if (this.trackY) {\r\n      this._barYSub$.unsubscribe();\r\n      this._thumbYSub$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll horizontally\r\n   * @param to\r\n   * @param duration\r\n   */\r\n  scrollXTo(to: number, duration?: number) {\r\n    if (duration) {\r\n      of(duration).pipe(\r\n        takeWhile(() => duration > 0),\r\n        expand((d: number) => {\r\n          if (d > 0) {\r\n            const difference = to - this.view.scrollLeft;\r\n            const perTick = difference / d * 10;\r\n            this.renderer.setProperty(this.view, 'scrollLeft', this.view.scrollLeft + perTick);\r\n            return of(d - 10).pipe(delay(10));\r\n          } else {\r\n            duration = d;\r\n            return EMPTY;\r\n          }\r\n        })\r\n      ).subscribe();\r\n    } else {\r\n      this.renderer.setProperty(this.view, 'scrollLeft', to);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll vertically\r\n   * @param to\r\n   * @param duration\r\n   */\r\n  scrollYTo(to: number, duration?: number) {\r\n    if (duration) {\r\n      of(duration).pipe(\r\n        takeWhile(() => duration > 0),\r\n        expand((d: number) => {\r\n          if (d > 0) {\r\n            const difference = to - this.view.scrollTop;\r\n            const perTick = difference / d * 10;\r\n            this.renderer.setProperty(this.view, 'scrollTop', this.view.scrollTop + perTick);\r\n            return of(d - 10).pipe(delay(10));\r\n          } else {\r\n            duration = d;\r\n            return EMPTY;\r\n          }\r\n        })\r\n      ).subscribe();\r\n    } else {\r\n      this.renderer.setProperty(this.view, 'scrollTop', to);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll view to top\r\n   * @param duration\r\n   */\r\n  scrollToTop(duration?: number) {\r\n    this.scrollYTo(0, duration);\r\n  }\r\n\r\n  /**\r\n   * Scroll view to bottom\r\n   * @param duration\r\n   */\r\n  scrollToBottom(duration?: number) {\r\n    this.scrollYTo(this.view.scrollHeight, duration);\r\n  }\r\n\r\n  /**\r\n   * Scroll view to max right\r\n   * @param duration\r\n   */\r\n  scrollToRight(duration?: number) {\r\n    this.scrollXTo(this.view.scrollWidth, duration);\r\n  }\r\n\r\n  /**\r\n   * Scroll view to max left\r\n   * @param duration\r\n   */\r\n  scrollToLeft(duration?: number) {\r\n    this.scrollXTo(0, duration);\r\n  }\r\n\r\n  /**\r\n   * Update thumbnails\r\n   */\r\n  update() {\r\n    this.setThumbXPosition(this._currXPos, this.calculateThumbXSize());\r\n    this.setThumbYPosition(this._currYPos, this.calculateThumbYSize());\r\n  }\r\n\r\n  /**\r\n   * Scroll Worker\r\n   * @param e - Mouse Event\r\n   */\r\n  private scrollWorker(e: any) {\r\n    this._thumbSizeX = this.thumbX.clientWidth;\r\n    this._thumbSizeY = this.thumbY.clientHeight;\r\n\r\n    this._trackLeftMax = this.barX.clientWidth - this._thumbSizeX;\r\n    this._trackTopMax = this.barY.clientHeight - this._thumbSizeY;\r\n\r\n    const thumbXPosition = this.view.scrollLeft * this._trackLeftMax / this._scrollLeftMax;\r\n    const thumbYPosition = this.view.scrollTop * this._trackTopMax / this._scrollTopMax;\r\n\r\n    this.setThumbXPosition(thumbXPosition, this.calculateThumbXSize());\r\n    this.setThumbYPosition(thumbYPosition, this.calculateThumbYSize());\r\n\r\n    /** Emit scroll state */\r\n    this.scrollState.emit(e);\r\n  }\r\n\r\n  /**\r\n   * Horizontal scrollbar click worker\r\n   * @param e - Mouse Event\r\n   */\r\n  private barXWorker(e: any) {\r\n    if (e.target === e.currentTarget) {\r\n      const offset = e.offsetX - this._naturalThumbSizeX * .5;\r\n      const thumbPositionPercentage = offset * 100 / this.barX.clientWidth;\r\n      const scrollLeft = thumbPositionPercentage * this.view.scrollWidth / 100;\r\n      this.renderer.setProperty(this.view, 'scrollLeft', scrollLeft);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Vertical scrollbar click worker\r\n   * @param e - Mouse Event\r\n   */\r\n  private barYWorker(e: any) {\r\n    if (e.target === e.currentTarget) {\r\n      const offset = e.offsetY - this._naturalThumbSizeY * .5;\r\n      const thumbPositionPercentage = offset * 100 / this.barY.clientHeight;\r\n      const scrollTop = thumbPositionPercentage * this.view.scrollHeight / 100;\r\n      this.renderer.setProperty(this.view, 'scrollTop', scrollTop);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start horizontal thumb worker\r\n   */\r\n  private startThumbXWorker(): Subscription {\r\n    const mousedown$ = fromEvent(this.thumbX, 'mousedown');\r\n    const mouseup$ = fromEvent(this.document, 'mouseup');\r\n    const mousemove$ = fromEvent(this.document, 'mousemove');\r\n    return mousedown$.pipe(\r\n      tap(() => this.document.onselectstart = () => false),\r\n      map((mousedownEvent: any) => mousedownEvent.offsetX),\r\n      mergeMap((mousedownOffsetX: number) => mousemove$.pipe(\r\n        takeUntil(mouseup$.pipe(tap(() => this.document.onselectstart = null))),\r\n        map((mousemoveEvent: any) => mousemoveEvent.clientX),\r\n        tap((mousemoveClientX: number) => {\r\n          const offset = mousemoveClientX - this.barX.getBoundingClientRect().left;\r\n          const scroll = this._scrollLeftMax * (offset - mousedownOffsetX) / this._trackLeftMax;\r\n          this.renderer.setProperty(this.view, 'scrollLeft', scroll);\r\n        })\r\n      ))\r\n    ).subscribe();\r\n  }\r\n\r\n  /**\r\n   * Start vertical thumb worker\r\n   */\r\n  private startThumbYWorker(): Subscription {\r\n    const mousedown$ = fromEvent(this.thumbY, 'mousedown');\r\n    const mouseup$ = fromEvent(this.document, 'mouseup');\r\n    const mousemove$ = fromEvent(this.document, 'mousemove');\r\n    return mousedown$.pipe(\r\n      tap(() => this.document.onselectstart = () => false),\r\n      map((mousedownEvent: any) => mousedownEvent.offsetY),\r\n      mergeMap((mousedownOffsetY: number) => mousemove$.pipe(\r\n        takeUntil(mouseup$.pipe(tap(() => this.document.onselectstart = null))),\r\n        map((mousemoveEvent: any) => mousemoveEvent.clientY),\r\n        tap((mousemoveClientY: number) => {\r\n          const offset = mousemoveClientY - this.barY.getBoundingClientRect().top;\r\n          const scroll = this._scrollTopMax * (offset - mousedownOffsetY) / this._trackTopMax;\r\n          this.renderer.setProperty(this.view, 'scrollTop', scroll);\r\n        })\r\n      ))\r\n    ).subscribe();\r\n  }\r\n\r\n  /**\r\n   * Calculate Thumb X Size\r\n   */\r\n  private calculateThumbXSize(): number {\r\n    this._naturalThumbSizeX = this.barX.clientWidth / this.view.scrollWidth * this.barX.clientWidth;\r\n    this._scrollLeftMax = this.view.scrollWidth - this.view.clientWidth;\r\n    return this.scrollBoundaries(this._naturalThumbSizeX, this._scrollLeftMax);\r\n  }\r\n\r\n  /**\r\n   * Calculate Thumb Y Size\r\n   */\r\n  private calculateThumbYSize(): number {\r\n    this._naturalThumbSizeY = this.barY.clientHeight / this.view.scrollHeight * this.barY.clientHeight;\r\n    this._scrollTopMax = this.view.scrollHeight - this.view.clientHeight;\r\n    return this.scrollBoundaries(this._naturalThumbSizeY, this._scrollTopMax);\r\n  }\r\n\r\n  /**\r\n   * Get scrollbar thumb size\r\n   * @param naturalThumbSize\r\n   * @param scrollMax\r\n   */\r\n  private scrollBoundaries(naturalThumbSize: number, scrollMax: number): number {\r\n    return (naturalThumbSize < this._minThumbSize) ? this._minThumbSize : scrollMax ? naturalThumbSize : 0;\r\n  }\r\n\r\n  /**\r\n   * Set horizontal scrollbar thumb style\r\n   * @param x\r\n   * @param width\r\n   */\r\n  private setThumbXPosition(x: number, width: number) {\r\n    const transform = `translate3d(${x}px, 0, 0)`;\r\n    this.renderer.setStyle(this.thumbX, 'transform', transform);\r\n    this.renderer.setStyle(this.thumbX, 'width', width + 'px');\r\n    this._currXPos = x;\r\n  }\r\n\r\n  /**\r\n   * Set vertical scrollbar thumb style\r\n   * @param y\r\n   * @param height\r\n   */\r\n  private setThumbYPosition(y: number, height: number) {\r\n    const transform = `translate3d(0, ${y}px, 0)`;\r\n    this.renderer.setStyle(this.thumbY, 'transform', transform);\r\n    this.renderer.setStyle(this.thumbY, 'height', height + 'px');\r\n    this._currYPos = y;\r\n  }\r\n\r\n  /**\r\n   * Hide native scrollbars\r\n   */\r\n  private hideNativeScrollbars() {\r\n    const size = `calc(100% + ${this.getNativeScrollbarWidth()}px)`;\r\n    this.renderer.setStyle(this.view, 'width', size);\r\n    this.renderer.setStyle(this.view, 'height', size);\r\n  }\r\n\r\n  /**\r\n   * Get the native scrollbar width\r\n   */\r\n  private getNativeScrollbarWidth(): number {\r\n    const element = this.document.createElement('div');\r\n    element.style.position = 'absolute';\r\n    element.style.top = '-9999px';\r\n    element.style.width = '100px';\r\n    element.style.height = '100px';\r\n    element.style.overflow = 'scroll';\r\n    element.style.msOverflowStyle = 'scrollbar';\r\n    this.document.body.appendChild(element);\r\n    const sw = element.offsetWidth - element.clientWidth;\r\n    this.document.body.removeChild(element);\r\n    return sw;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { ScrollbarComponent } from './scrollbar.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ObserversModule\r\n  ],\r\n  declarations: [ScrollbarComponent],\r\n  exports: [ScrollbarComponent]\r\n})\r\nexport class ScrollbarModule {\r\n}\r\n"]}