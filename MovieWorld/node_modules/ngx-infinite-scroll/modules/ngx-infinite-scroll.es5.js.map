{"version":3,"file":"ngx-infinite-scroll.es5.js","sources":["../../ngx-infinite-scroll.ts","../../public_api.ts","../../src/ngx-infinite-scroll.ts","../../src/modules/ngx-infinite-scroll.module.ts","../../src/modules/infinite-scroll.directive.ts","../../src/services/scroll-register.ts","../../src/services/scroll-resolver.ts","../../src/services/position-resolver.ts","../../src/services/event-trigger.ts","../../src/services/axis-resolver.ts","../../src/services/ngx-ins-utils.ts"],"sourcesContent":["export * from './public_api';\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport * from './src/ngx-infinite-scroll';\n\n","// Public classes.\nexport {\n  ContainerRef,\n  InfiniteScrollEvent,\n  IPositionElements,\n  IPositionStats,\n  IResolver\n} from './models';\n\nexport { InfiniteScrollDirective } from './modules/infinite-scroll.directive';\nexport { InfiniteScrollModule } from './modules/ngx-infinite-scroll.module';\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n@NgModule({\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: []\n})\nexport class InfiniteScrollModule { }\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport { InfiniteScrollEvent, IInfiniteScrollAction } from '../models';\nimport { hasWindowDefined, inputPropChanged } from '../services/ngx-ins-utils';\nimport { createScroller, InfiniteScrollActions } from '../services/scroll-register';\n\n@Directive({\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n})\nexport class InfiniteScrollDirective\n  implements OnDestroy, OnChanges, AfterViewInit {\n  @Output() scrolled = new EventEmitter<InfiniteScrollEvent>();\n  @Output() scrolledUp = new EventEmitter<InfiniteScrollEvent>();\n\n  @Input() infiniteScrollDistance: number = 2;\n  @Input() infiniteScrollUpDistance: number = 1.5;\n  @Input() infiniteScrollThrottle: number = 150;\n  @Input() infiniteScrollDisabled: boolean = false;\n  @Input() infiniteScrollContainer: any = null;\n  @Input() scrollWindow: boolean = true;\n  @Input() immediateCheck: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() alwaysCallback: boolean = false;\n  @Input() fromRoot: boolean = false;\n\n  private disposeScroller: Subscription;\n\n  constructor(private element: ElementRef, private zone: NgZone) { }\n\n  ngAfterViewInit() {\n    if (!this.infiniteScrollDisabled) {\n      this.setup();\n    }\n  }\n\n  ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }: SimpleChanges) {\n    const containerChanged = inputPropChanged(infiniteScrollContainer);\n    const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n    const distanceChanged = inputPropChanged(infiniteScrollDistance);\n    const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n      (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n\n    if (containerChanged || disabledChanged || distanceChanged) {\n      this.destroyScroller();\n      if (shouldSetup) {\n        this.setup();\n      }\n    }\n  }\n\n  setup() {\n    if (hasWindowDefined()) {\n      this.zone.runOutsideAngular(() => {\n        this.disposeScroller = createScroller({\n          fromRoot: this.fromRoot,\n          alwaysCallback: this.alwaysCallback,\n          disable: this.infiniteScrollDisabled,\n          downDistance: this.infiniteScrollDistance,\n          element: this.element,\n          horizontal: this.horizontal,\n          scrollContainer: this.infiniteScrollContainer,\n          scrollWindow: this.scrollWindow,\n          throttle: this.infiniteScrollThrottle,\n          upDistance: this.infiniteScrollUpDistance\n        }).subscribe((payload: any) => this.zone.run(() => this.handleOnScroll(payload)));\n      });\n    }\n  }\n\n  handleOnScroll({ type, payload }: IInfiniteScrollAction) {\n    switch (type) {\n      case InfiniteScrollActions.DOWN:\n        return this.scrolled.emit(payload);\n\n      case InfiniteScrollActions.UP:\n        return this.scrolledUp.emit(payload);\n\n      default:\n        return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyScroller();\n  }\n\n  destroyScroller() {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n}\n","import { Observable, of, fromEvent } from \"rxjs\";\nimport { map, mergeMap, tap, sampleTime, filter } from \"rxjs/operators\";\n\nimport * as Models from \"../models\";\nimport { AxisResolver } from \"./axis-resolver\";\nimport { shouldTriggerEvents, IScrollConfig } from \"./event-trigger\";\nimport { resolveContainerElement } from \"./ngx-ins-utils\";\nimport { calculatePoints, createResolver } from \"./position-resolver\";\nimport * as ScrollResolver from \"./scroll-resolver\";\n\nexport function createScroller(config: Models.IScroller) {\n  const { scrollContainer, scrollWindow, element, fromRoot } = config;\n  const resolver = createResolver({\n    axis: new AxisResolver(!config.horizontal),\n    windowElement: resolveContainerElement(\n      scrollContainer,\n      scrollWindow,\n      element,\n      fromRoot\n    )\n  });\n  const { totalToScroll: startWithTotal } = calculatePoints(element, resolver);\n  const scrollState: Models.IScrollState = {\n    lastScrollPosition: 0,\n    lastTotalToScroll: 0,\n    totalToScroll: startWithTotal,\n    triggered: {\n      down: 0,\n      up: 0\n    }\n  };\n  const options: Models.IScrollRegisterConfig = {\n    container: resolver.container,\n    throttle: config.throttle\n  };\n  const distance = {\n    up: config.upDistance,\n    down: config.downDistance\n  };\n  return attachScrollEvent(options).pipe(\n    mergeMap((ev: any) => of(calculatePoints(element, resolver))),\n    map((positionStats: Models.IPositionStats) =>\n      toInfiniteScrollParams(\n        scrollState.lastScrollPosition,\n        positionStats,\n        distance\n      )\n    ),\n    tap(({ stats, scrollDown }: Models.IScrollParams) =>\n      ScrollResolver.updateScrollState(\n        scrollState,\n        stats.scrolled,\n        stats.totalToScroll\n      )\n    ),\n    filter(\n      ({ fire, scrollDown, stats: { totalToScroll } }: Models.IScrollParams) =>\n        shouldTriggerEvents(\n          config.alwaysCallback,\n          fire,\n          ScrollResolver.isTriggeredScroll(\n            totalToScroll,\n            scrollState,\n            scrollDown\n          )\n        )\n    ),\n    tap(({ scrollDown, stats: { totalToScroll } }: Models.IScrollParams) => {\n      ScrollResolver.updateTriggeredFlag(\n        totalToScroll,\n        scrollState,\n        true,\n        scrollDown\n      );\n    }),\n    map(toInfiniteScrollAction)\n  );\n}\n\nexport function attachScrollEvent(\n  options: Models.IScrollRegisterConfig\n): Observable<{}> {\n  let obs = fromEvent(options.container, \"scroll\");\n  // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n  // Let's avoid calling the function unless needed.\n  // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n  if (options.throttle) {\n    obs = obs.pipe(sampleTime(options.throttle));\n  }\n  return obs;\n}\n\nexport function toInfiniteScrollParams(\n  lastScrollPosition: number,\n  stats: Models.IPositionStats,\n  distance: Models.IScrollerDistance\n): Models.IScrollParams {\n  const { scrollDown, fire } = ScrollResolver.getScrollStats(\n    lastScrollPosition,\n    stats,\n    distance\n  );\n  return {\n    scrollDown,\n    fire,\n    stats\n  };\n}\n\nexport const InfiniteScrollActions = {\n  DOWN: \"[NGX_ISE] DOWN\",\n  UP: \"[NGX_ISE] UP\"\n};\n\nexport function toInfiniteScrollAction(\n  response: Models.IScrollParams\n): Models.IInfiniteScrollAction {\n  const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n  return {\n    type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n    payload: {\n      currentScrollPosition\n    }\n  };\n}\n","import { IPositionStats, IScrollState, IScrollerDistance } from '../models';\n\nexport function shouldFireScrollEvent(\n  container: IPositionStats,\n  distance: IScrollerDistance,\n  scrollingDown: boolean\n) {\n  let remaining: number;\n  let containerBreakpoint: number;\n  if (container.totalToScroll <= 0) {\n    return false;\n  }\n  const scrolledUntilNow = container.height + container.scrolled;\n  if (scrollingDown) {\n    remaining =\n      (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n    containerBreakpoint = distance.down / 10;\n  } else {\n    const totalHiddenContentHeight =\n      container.scrolled + (container.totalToScroll - scrolledUntilNow);\n    remaining = container.scrolled / totalHiddenContentHeight;\n    containerBreakpoint = distance.up / 10;\n  }\n\n  const shouldFireEvent: boolean = remaining <= containerBreakpoint;\n  return shouldFireEvent;\n}\n\nexport function isScrollingDownwards(\n  lastScrollPosition: number,\n  container: IPositionStats\n) {\n  return lastScrollPosition < container.scrolled;\n}\n\nexport function getScrollStats(\n  lastScrollPosition: number,\n  container: IPositionStats,\n  distance: IScrollerDistance\n) {\n  const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n  return {\n    fire: shouldFireScrollEvent(container, distance, scrollDown),\n    scrollDown\n  };\n}\n\nexport function updateScrollPosition(\n  position: number,\n  scrollState: IScrollState\n) {\n  return (scrollState.lastScrollPosition = position);\n}\n\nexport function updateTotalToScroll(\n  totalToScroll: number,\n  scrollState: IScrollState\n) {\n  if (scrollState.lastTotalToScroll !== totalToScroll) {\n    scrollState.lastTotalToScroll = scrollState.totalToScroll;\n    scrollState.totalToScroll = totalToScroll;\n  }\n}\n\nexport function isSameTotalToScroll(scrollState: IScrollState) {\n  return scrollState.totalToScroll === scrollState.lastTotalToScroll;\n}\n\nexport function updateTriggeredFlag(\n  scroll,\n  scrollState: IScrollState,\n  triggered: boolean,\n  isScrollingDown: boolean\n) {\n  if (isScrollingDown) {\n    scrollState.triggered.down = scroll;\n  } else {\n    scrollState.triggered.up = scroll;\n  }\n}\n\nexport function isTriggeredScroll(\n  totalToScroll,\n  scrollState: IScrollState,\n  isScrollingDown: boolean\n) {\n  return isScrollingDown\n    ? scrollState.triggered.down === totalToScroll\n    : scrollState.triggered.up === totalToScroll;\n}\n\nexport function updateScrollState(\n  scrollState: IScrollState,\n  scrolledUntilNow: number,\n  totalToScroll: number\n) {\n  updateScrollPosition(scrolledUntilNow, scrollState);\n  updateTotalToScroll(totalToScroll, scrollState);\n  // const isSameTotal = isSameTotalToScroll(scrollState);\n  // if (!isSameTotal) {\n  //   updateTriggeredFlag(scrollState, false, isScrollingDown);\n  // }\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ContainerRef, IPositionElements, IPositionStats, IResolver } from '../models';\nimport { AxisResolver } from './axis-resolver';\n\nexport function createResolver({\n  windowElement,\n  axis\n}: IPositionElements): IResolver {\n  return createResolverWithContainer(\n    { axis, isWindow: isElementWindow(windowElement) },\n    windowElement\n  );\n}\n\nexport function createResolverWithContainer(\n  resolver,\n  windowElement: ContainerRef\n) {\n  const container =\n    resolver.isWindow || (windowElement && !windowElement.nativeElement)\n      ? windowElement\n      : windowElement.nativeElement;\n  return { ...resolver, container };\n}\n\nexport function isElementWindow(windowElement: ContainerRef): boolean {\n  const isWindow = ['Window', 'global'].some((obj: string) =>\n    Object.prototype.toString.call(windowElement).includes(obj)\n  );\n  return isWindow;\n}\n\nexport function getDocumentElement(isContainerWindow: boolean, windowElement) {\n  return isContainerWindow ? windowElement.document.documentElement : null;\n}\n\nexport function calculatePoints(element: ElementRef, resolver: IResolver) {\n  const height = extractHeightForElement(resolver);\n  return resolver.isWindow\n    ? calculatePointsForWindow(height, element, resolver)\n    : calculatePointsForElement(height, element, resolver);\n}\n\nexport function calculatePointsForWindow(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container, isWindow } = resolver;\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  // scrolled until now / current y point\n  const scrolled =\n    height +\n    getElementPageYOffset(\n      getDocumentElement(isWindow, container),\n      axis,\n      isWindow\n    );\n  // total height / most bottom y point\n  const nativeElementHeight = getElementHeight(\n    element.nativeElement,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n  const totalToScroll =\n    getElementOffsetTop(element.nativeElement, axis, isWindow) +\n    nativeElementHeight;\n  return { height, scrolled, totalToScroll };\n}\n\nexport function calculatePointsForElement(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container } = resolver;\n  // perhaps use container.offsetTop instead of 'scrollTop'\n  const scrolled = container[axis.scrollTopKey()];\n  const totalToScroll = container[axis.scrollHeightKey()];\n  return { height, scrolled, totalToScroll };\n}\n\nexport function extractHeightPropKeys(axis: AxisResolver) {\n  return {\n    offsetHeightKey: axis.offsetHeightKey(),\n    clientHeightKey: axis.clientHeightKey()\n  };\n}\n\nexport function extractHeightForElement({\n  container,\n  isWindow,\n  axis\n}: IResolver) {\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  return getElementHeight(\n    container,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n}\nexport function getElementHeight(\n  elem: any,\n  isWindow: boolean,\n  offsetHeightKey: string,\n  clientHeightKey: string\n) {\n  if (isNaN(elem[offsetHeightKey])) {\n    const docElem = getDocumentElement(isWindow, elem);\n    return docElem ? docElem[clientHeightKey] : 0;\n  } else {\n    return elem[offsetHeightKey];\n  }\n}\n\nexport function getElementOffsetTop(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const topKey = axis.topKey();\n  // elem = elem.nativeElement;\n  if (!elem.getBoundingClientRect) {\n    // || elem.css('none')) {\n    return;\n  }\n  return (\n    elem.getBoundingClientRect()[topKey] +\n    getElementPageYOffset(elem, axis, isWindow)\n  );\n}\n\nexport function getElementPageYOffset(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const pageYOffset = axis.pageYOffsetKey();\n  const scrollTop = axis.scrollTopKey();\n  const offsetTop = axis.offsetTopKey();\n\n  if (isNaN(window[pageYOffset])) {\n    return getDocumentElement(isWindow, elem)[scrollTop];\n  } else if (elem.ownerDocument) {\n    return elem.ownerDocument.defaultView[pageYOffset];\n  } else {\n    return elem[offsetTop];\n  }\n}\n","import { InfiniteScrollEvent, IPositionStats } from '../models';\n\nexport interface IScrollerProps {\n  container: IPositionStats;\n  down: number;\n  up: number;\n  alwaysCallback: boolean;\n  disabled: boolean;\n}\n\nexport interface ITriggerEvents {\n  down: (event: any) => any;\n  up: (event: any) => any;\n}\n\nexport interface IDistanceRange {\n  down: number;\n  up: number;\n}\n\nexport interface IScrollConfig {\n  alwaysCallback: boolean;\n  shouldFireScrollEvent: boolean;\n}\n\nexport function shouldTriggerEvents(\n  alwaysCallback: boolean,\n  shouldFireScrollEvent: boolean,\n  isTriggeredCurrentTotal: boolean) {\n  return (alwaysCallback || shouldFireScrollEvent) && !isTriggeredCurrentTotal;\n}\n","const VerticalProps = {\n  clientHeight: \"clientHeight\",\n  offsetHeight: \"offsetHeight\",\n  scrollHeight: \"scrollHeight\",\n  pageYOffset: \"pageYOffset\",\n  offsetTop: \"offsetTop\",\n  scrollTop: \"scrollTop\",\n  top: \"top\"\n};\n\nconst HorizontalProps = {\n  clientHeight: \"clientWidth\",\n  offsetHeight: \"offsetWidth\",\n  scrollHeight: \"scrollWidth\",\n  pageYOffset: \"pageXOffset\",\n  offsetTop: \"offsetLeft\",\n  scrollTop: \"scrollLeft\",\n  top: \"left\"\n};\n\nexport class AxisResolver {\n  private propsMap: any;\n\n  constructor(private vertical: boolean = true) {\n    this.propsMap = vertical ? VerticalProps : HorizontalProps;\n  }\n  clientHeightKey() {\n    return this.propsMap.clientHeight;\n  }\n  offsetHeightKey() {\n    return this.propsMap.offsetHeight;\n  }\n  scrollHeightKey() {\n    return this.propsMap.scrollHeight;\n  }\n  pageYOffsetKey() {\n    return this.propsMap.pageYOffset;\n  }\n  offsetTopKey() {\n    return this.propsMap.offsetTop;\n  }\n  scrollTopKey() {\n    return this.propsMap.scrollTop;\n  }\n  topKey() {\n    return this.propsMap.top;\n  }\n}\n","import { ElementRef, SimpleChange } from '@angular/core';\n\nexport function resolveContainerElement(\n  selector: string | any,\n  scrollWindow,\n  defaultElement,\n  fromRoot: boolean\n): any {\n  const hasWindow = window && !!window.document && window.document.documentElement;\n  let container = hasWindow && scrollWindow ? window : defaultElement;\n  if (selector) {\n    const containerIsString =\n      selector && hasWindow && typeof selector === 'string';\n    container = containerIsString\n      ? findElement(selector, defaultElement.nativeElement, fromRoot)\n      : selector;\n    if (!container) {\n      throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n    }\n  }\n  return container;\n}\n\nexport function findElement(\n  selector: string | any,\n  customRoot: ElementRef | any,\n  fromRoot: boolean\n) {\n  const rootEl = fromRoot ? window.document : customRoot;\n  return rootEl.querySelector(selector);\n}\n\nexport function inputPropChanged(prop: SimpleChange): boolean {\n  return prop && !prop.firstChange;\n}\n\nexport function hasWindowDefined(): boolean {\n  return typeof window !== 'undefined';\n}\n"],"names":["ScrollResolver.updateTriggeredFlag","ScrollResolver.isTriggeredScroll","ScrollResolver.updateScrollState"],"mappings":";;;;;;;;;;;;;;AUEA,iCACE,QAAsB,EACtB,YAAY,EACZ,cAAc,EACd,QAAiB;IAEjB,IAAF,gBAAA,CAAQ,SAAS,GAAG,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC;IACjF,IAAF,gBAAA,CAAM,SAAS,GAAG,SAAS,IAAI,YAAY,CAA3C,CAAA,CAA8C,MAAM,CAApD,CAAA,CAAuD,cAAc,CAAC;IACpE,EAAF,CAAA,CAAM,QAAQ,CAAd,CAAgB,CAAhB;QACI,IAAJ,gBAAA,CAAU,iBAAiB,GACrB,QAAQ,IAAI,SAAS,IAAI,OAAO,QAAQ,KAAK,QAAQ,CAAC;QACxD,SAAS,GAAG,iBAAiB;YACjC,CAAA,CAAQ,WAAW,CAAC,QAAQ,EAAE,cAAc,CAAC,aAAa,EAAE,QAAQ,CAAC;YACrE,CAAA,CAAQ,QAAQ,CAAC;QACb,EAAJ,CAAA,CAAQ,CAAC,SAAS,CAAlB,CAAoB,CAApB;YACM,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;QACvF,CAAK;IACL,CAAG;IACD,MAAF,CAAS,SAAS,CAAC;AACnB,CAAC;;;;;;;AAED,qBACE,QAAsB,EACtB,UAA4B,EAC5B,QAAiB;IAEjB,IAAF,gBAAA,CAAQ,MAAM,GAAG,QAAQ,CAAzB,CAAA,CAA4B,MAAM,CAAC,QAAQ,CAA3C,CAAA,CAA8C,UAAU,CAAC;IACvD,MAAF,CAAS,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxC,CAAC;;;;;AAED,0BAAiC,IAAkB;IACjD,MAAF,CAAS,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;AACnC,CAAC;;;;AAED;IACE,MAAF,CAAS,OAAO,MAAM,KAAK,WAAW,CAAC;AACvC,CAAC;;;;;ADtCD,IAAM,aAAa,GAAG;IACpB,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;IAC5B,WAAW,EAAE,aAAa;IAC1B,SAAS,EAAE,WAAW;IACtB,SAAS,EAAE,WAAW;IACtB,GAAG,EAAE,KAAK;CACX,CAAC;AAEF,IAAM,eAAe,GAAG;IACtB,YAAY,EAAE,aAAa;IAC3B,YAAY,EAAE,aAAa;IAC3B,YAAY,EAAE,aAAa;IAC3B,WAAW,EAAE,aAAa;IAC1B,SAAS,EAAE,YAAY;IACvB,SAAS,EAAE,YAAY;IACvB,GAAG,EAAE,MAAM;CACZ,CAAC;AAEF;;;;IAGE,sBAAoB,QAAwB;QAAxB,yBAAA,EAAA,eAAwB;QAAxB,IAAtB,CAAA,QAA8B,GAAR,QAAQ,CAAgB;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAA5B,CAAA,CAA+B,aAAa,CAA5C,CAAA,CAA+C,eAAe,CAAC;IAC/D,CAAG;;;;IACD,sCAAe,GAAf;QACE,MAAJ,CAAW,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;IACtC,CAAG;;;;IACD,sCAAe,GAAf;QACE,MAAJ,CAAW,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;IACtC,CAAG;;;;IACD,sCAAe,GAAf;QACE,MAAJ,CAAW,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;IACtC,CAAG;;;;IACD,qCAAc,GAAd;QACE,MAAJ,CAAW,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;IACrC,CAAG;;;;IACD,mCAAY,GAAZ;QACE,MAAJ,CAAW,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IACnC,CAAG;;;;IACD,mCAAY,GAAZ;QACE,MAAJ,CAAW,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IACnC,CAAG;;;;IACD,6BAAM,GAAN;QACE,MAAJ,CAAW,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC7B,CAAG;IACH,mBAAC;AAAD,CAAC,AA3BD,IA2BC;;;;;;;;;;;;;;;;;;;;;;;ADtBD,6BACE,cAAuB,EACvB,qBAA8B,EAC9B,uBAAgC;IAChC,MAAF,CAAS,CAAC,cAAc,IAAI,qBAAqB,CAAjD,IAAsD,CAAC,uBAAuB,CAAC;AAC/E,CAAC;;;;;;;;;ADzBD,wBAA+B,EAGX;QAFlB,gCAAa,EACb,cAAI;IAEJ,MAAF,CAAS,2BAA2B,CAChC,EAAE,IAAI,MAAA,EAAE,QAAQ,EAAE,eAAe,CAAC,aAAa,CAAC,EAAE,EAClD,aAAa,CACd,CAAC;AACJ,CAAC;;;;;;AAED,qCACE,QAAQ,EACR,aAA2B;IAE3B,IAAF,gBAAA,CAAQ,SAAS,GACb,QAAQ,CAAC,QAAQ,IADrB,CAC0B,aAAa,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACxE,CAAA,CAAQ,aAAa;QACrB,CAAA,CAAQ,aAAa,CAAC,aAAa,CAAC;IAClC,MAAF,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAc,QAAQ,EAAtB,EAAwB,SAAS,WAAA,EAAjC,CAAA,CAAoC;AACpC,CAAC;;;;;AAED,yBAAgC,aAA2B;IACzD,IAAF,gBAAA,CAAQ,QAAQ,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,GAAW,IACrD,OAAA,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAA3D,CAA2D,CAC5D,CAAC;IACF,MAAF,CAAS,QAAQ,CAAC;AAClB,CAAC;;;;;;AAED,4BAAmC,iBAA0B,EAAE,aAAa;IAC1E,MAAF,CAAS,iBAAiB,CAA1B,CAAA,CAA6B,aAAa,CAAC,QAAQ,CAAC,eAAe,CAAnE,CAAA,CAAsE,IAAI,CAAC;AAC3E,CAAC;;;;;;AAED,yBAAgC,OAAmB,EAAE,QAAmB;IACtE,IAAF,gBAAA,CAAQ,MAAM,GAAG,uBAAuB,CAAC,QAAQ,CAAC,CAAC;IACjD,MAAF,CAAS,QAAQ,CAAC,QAAQ;QAC1B,CAAA,CAAM,wBAAwB,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;QACzD,CAAA,CAAM,yBAAyB,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC3D,CAAC;;;;;;;AAED,kCACE,MAAc,EACd,OAAmB,EACnB,QAAmB;IAEX,IAAA,oBAAI,EAAE,8BAAS,EAAE,4BAAQ,CAAc;IACzC,IAAA,gCAAkE,EAAhE,oCAAe,EAAE,oCAAe,CAAiC;;IAEzE,IAAF,gBAAA,CAAQ,QAAQ,GACZ,MAAM;QACN,qBAAqB,CACnB,kBAAkB,CAAC,QAAQ,EAAE,SAAS,CAAC,EACvC,IAAI,EACJ,QAAQ,CACT,CAAC;;IAEJ,IAAF,gBAAA,CAAQ,mBAAmB,GAAG,gBAAgB,CAC1C,OAAO,CAAC,aAAa,EACrB,QAAQ,EACR,eAAe,EACf,eAAe,CAChB,CAAC;IACF,IAAF,gBAAA,CAAQ,aAAa,GACjB,mBAAmB,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,QAAQ,CAAC;QAC1D,mBAAmB,CAAC;IACtB,MAAF,CAAS,EAAE,MAAM,QAAA,EAAE,QAAQ,UAAA,EAAE,aAAa,eAAA,EAAE,CAAC;AAC7C,CAAC;;;;;;;AAED,mCACE,MAAc,EACd,OAAmB,EACnB,QAAmB;IAEX,IAAA,oBAAI,EAAE,8BAAS,CAAc;;IAErC,IAAF,gBAAA,CAAQ,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAChD,IAAF,gBAAA,CAAQ,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IACxD,MAAF,CAAS,EAAE,MAAM,QAAA,EAAE,QAAQ,UAAA,EAAE,aAAa,eAAA,EAAE,CAAC;AAC7C,CAAC;;;;;AAED,+BAAsC,IAAkB;IACtD,MAAF,CAAS;QACL,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE;QACvC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE;KACxC,CAAC;AACJ,CAAC;;;;;AAED,iCAAwC,EAI5B;QAHV,wBAAS,EACT,sBAAQ,EACR,cAAI;IAEE,IAAA,gCAAkE,EAAhE,oCAAe,EAAE,oCAAe,CAAiC;IACzE,MAAF,CAAS,gBAAgB,CACrB,SAAS,EACT,QAAQ,EACR,eAAe,EACf,eAAe,CAChB,CAAC;AACJ,CAAC;;;;;;;;AACD,0BACE,IAAS,EACT,QAAiB,EACjB,eAAuB,EACvB,eAAuB;IAEvB,EAAF,CAAA,CAAM,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAlC,CAAoC,CAApC;QACI,IAAJ,gBAAA,CAAU,OAAO,GAAG,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACnD,MAAJ,CAAW,OAAO,CAAlB,CAAA,CAAqB,OAAO,CAAC,eAAe,CAAC,CAA7C,CAAA,CAAgD,CAAC,CAAC;IAClD,CAAG;IAAH,IAAA,CAAS,CAAT;QACI,MAAJ,CAAW,IAAI,CAAC,eAAe,CAAC,CAAC;IACjC,CAAG;AACH,CAAC;;;;;;;AAED,6BACE,IAAkB,EAClB,IAAkB,EAClB,QAAiB;IAEjB,IAAF,gBAAA,CAAQ,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;;IAE7B,EAAF,CAAA,CAAM,CAAC,IAAI,CAAC,qBAAqB,CAAjC,CAAmC,CAAnC;;QAEI,MAAJ,CAAW;IACX,CAAG;IACD,MAAF,CAAA,CACI,IAAI,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;QACpC,qBAAqB,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAA/C,CACI;AACJ,CAAC;;;;;;;AAED,+BACE,IAAkB,EAClB,IAAkB,EAClB,QAAiB;IAEjB,IAAF,gBAAA,CAAQ,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1C,IAAF,gBAAA,CAAQ,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IACtC,IAAF,gBAAA,CAAQ,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IAEtC,EAAF,CAAA,CAAM,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAhC,CAAkC,CAAlC;QACI,MAAJ,CAAW,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC;IACzD,CAAG;IAAH,IAAA,CAAS,EAAT,CAAA,CAAa,IAAI,CAAC,aAAa,CAA/B,CAAiC,CAAjC;QACI,MAAJ,CAAW,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IACvD,CAAG;IAAH,IAAA,CAAS,CAAT;QACI,MAAJ,CAAW,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3B,CAAG;AACH,CAAC;;;;;;;;;;;ADrJD,+BACE,SAAyB,EACzB,QAA2B,EAC3B,aAAsB;IAEtB,IAAF,gBAAA,CAAM,SAAiB,CAAC;IACtB,IAAF,gBAAA,CAAM,mBAA2B,CAAC;IAChC,EAAF,CAAA,CAAM,SAAS,CAAC,aAAa,IAAI,CAAC,CAAlC,CAAoC,CAApC;QACI,MAAJ,CAAW,KAAK,CAAC;IACjB,CAAG;IACD,IAAF,gBAAA,CAAQ,gBAAgB,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC;IAC/D,EAAF,CAAA,CAAM,aAAa,CAAnB,CAAqB,CAArB;QACI,SAAS;YACP,CAAC,SAAS,CAAC,aAAa,GAAG,gBAAgB,CAAjD,GAAqD,SAAS,CAAC,aAAa,CAAC;QACzE,mBAAmB,GAAG,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC;IAC7C,CAAG;IAAH,IAAA,CAAS,CAAT;QACI,IAAJ,gBAAA,CAAU,wBAAwB,GAC5B,SAAS,CAAC,QAAQ,GADxB,CAC4B,SAAS,CAAC,aAAa,GAAG,gBAAgB,CAAC,CAAC;QACpE,SAAS,GAAG,SAAS,CAAC,QAAQ,GAAG,wBAAwB,CAAC;QAC1D,mBAAmB,GAAG,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;IAC3C,CAAG;IAED,IAAF,gBAAA,CAAQ,eAAe,GAAY,SAAS,IAAI,mBAAmB,CAAC;IAClE,MAAF,CAAS,eAAe,CAAC;AACzB,CAAC;;;;;;AAED,8BACE,kBAA0B,EAC1B,SAAyB;IAEzB,MAAF,CAAS,kBAAkB,GAAG,SAAS,CAAC,QAAQ,CAAC;AACjD,CAAC;;;;;;;AAED,wBACE,kBAA0B,EAC1B,SAAyB,EACzB,QAA2B;IAE3B,IAAF,gBAAA,CAAQ,UAAU,GAAG,oBAAoB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;IACvE,MAAF,CAAS;QACL,IAAI,EAAE,qBAAqB,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC;QAC5D,UAAU,YAAA;KACX,CAAC;AACJ,CAAC;;;;;;AAED,8BACE,QAAgB,EAChB,WAAyB;IAEzB,MAAF,CAAA,CAAU,WAAW,CAAC,kBAAkB,GAAG,QAAQ,CAAnD,CAAqD;AACrD,CAAC;;;;;;AAED,6BACE,aAAqB,EACrB,WAAyB;IAEzB,EAAF,CAAA,CAAM,WAAW,CAAC,iBAAiB,KAAK,aAAa,CAArD,CAAuD,CAAvD;QACI,WAAW,CAAC,iBAAiB,GAAG,WAAW,CAAC,aAAa,CAAC;QAC1D,WAAW,CAAC,aAAa,GAAG,aAAa,CAAC;IAC9C,CAAG;AACH,CAAC;;;;;;;;;;;;AAMD,6BACE,MAAM,EACN,WAAyB,EACzB,SAAkB,EAClB,eAAwB;IAExB,EAAF,CAAA,CAAM,eAAe,CAArB,CAAuB,CAAvB;QACI,WAAW,CAAC,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC;IACxC,CAAG;IAAH,IAAA,CAAS,CAAT;QACI,WAAW,CAAC,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC;IACtC,CAAG;AACH,CAAC;;;;;;;AAED,2BACE,aAAa,EACb,WAAyB,EACzB,eAAwB;IAExB,MAAF,CAAS,eAAe;QACxB,CAAA,CAAM,WAAW,CAAC,SAAS,CAAC,IAAI,KAAK,aAAa;QAClD,CAAA,CAAM,WAAW,CAAC,SAAS,CAAC,EAAE,KAAK,aAAa,CAAC;AACjD,CAAC;;;;;;;AAED,2BACE,WAAyB,EACzB,gBAAwB,EACxB,aAAqB;IAErB,oBAAoB,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;IACpD,mBAAmB,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;;;;;AAKlD,CAAC;;;;;ADtGD;;;;AAUA,wBAA+B,MAAwB;IAC7C,IAAA,wCAAe,EAAE,kCAAY,EAAE,wBAAO,EAAE,0BAAQ,CAAY;IACpE,IAAF,gBAAA,CAAQ,QAAQ,GAAG,cAAc,CAAC;QAC9B,IAAI,EAAE,IAAI,YAAY,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;QAC1C,aAAa,EAAE,uBAAuB,CACpC,eAAe,EACf,YAAY,EACZ,OAAO,EACP,QAAQ,CACT;KACF,CAAC,CAAC;IACK,IAAA,iEAA6B,CAAwC;IAC7E,IAAF,gBAAA,CAAQ,WAAW,GAAwB;QACvC,kBAAkB,EAAE,CAAC;QACrB,iBAAiB,EAAE,CAAC;QACpB,aAAa,EAAE,cAAc;QAC7B,SAAS,EAAE;YACT,IAAI,EAAE,CAAC;YACP,EAAE,EAAE,CAAC;SACN;KACF,CAAC;IACF,IAAF,gBAAA,CAAQ,OAAO,GAAiC;QAC5C,SAAS,EAAE,QAAQ,CAAC,SAAS;QAC7B,QAAQ,EAAE,MAAM,CAAC,QAAQ;KAC1B,CAAC;IACF,IAAF,gBAAA,CAAQ,QAAQ,GAAG;QACf,EAAE,EAAE,MAAM,CAAC,UAAU;QACrB,IAAI,EAAE,MAAM,CAAC,YAAY;KAC1B,CAAC;IACF,MAAF,CAAS,iBAAiB,CAAC,OAAO,CAAC,CAAC,IAAI,CACpC,QAAQ,CAAC,UAAC,EAAO,IAAK,OAAA,EAAE,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,EAAtC,CAAsC,CAAC,EAC7D,GAAG,CAAC,UAAC,aAAoC,IACvC,OAAA,sBAAsB,CACpB,WAAW,CAAC,kBAAkB,EAC9B,aAAa,EACb,QAAQ,CACT,EAJD,CAIC,CACF,EACD,GAAG,CAAC,UAAC,EAA2C;YAAzC,gBAAK,EAAE,0BAAU;QACtBE,OAAAA,iBAAgC,CAC9B,WAAW,EACX,KAAK,CAAC,QAAQ,EACd,KAAK,CAAC,aAAa,CACpB;IAJDA,CAIC,CACF,EACD,MAAM,CACJ,UAAC,EAAoE;YAAlE,cAAI,EAAE,0BAAU,EAAW,sCAAa;QACzC,OAAA,mBAAmB,CACjB,MAAM,CAAC,cAAc,EACrB,IAAI,EACJD,iBAAgC,CAC9B,aAAa,EACb,WAAW,EACX,UAAU,CACX,CACF;IARD,CAQC,CACJ,EACD,GAAG,CAAC,UAAC,EAA8D;YAA5D,0BAAU,EAAW,sCAAa;QACvCD,mBAAkC,CAChC,aAAa,EACb,WAAW,EACX,IAAI,EACJ,UAAU,CACX,CAAC;IACR,CAAK,CAAC,EACF,GAAG,CAAC,sBAAsB,CAAC,CAC5B,CAAC;AACJ,CAAC;;;;;AAED,2BACE,OAAqC;IAErC,IAAF,gBAAA,CAAM,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;;;;IAIjD,EAAF,CAAA,CAAM,OAAO,CAAC,QAAQ,CAAtB,CAAwB,CAAxB;QACI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACjD,CAAG;IACD,MAAF,CAAS,GAAG,CAAC;AACb,CAAC;;;;;;;AAED,gCACE,kBAA0B,EAC1B,KAA4B,EAC5B,QAAkC;IAE5B,IAAA,wDAIL,EAJO,0BAAU,EAAE,cAAI,CAItB;IACF,MAAF,CAAS;QACL,UAAU,YAAA;QACV,IAAI,MAAA;QACJ,KAAK,OAAA;KACN,CAAC;AACJ,CAAC;AAED,IAAa,qBAAqB,GAAG;IACnC,IAAI,EAAE,gBAAgB;IACtB,EAAE,EAAE,cAAc;CACnB,CAAC;;;;;AAEF,gCACE,QAA8B;IAEtB,IAAA,gCAAU,EAAW,+CAA+B,CAAgB;IAC5E,MAAF,CAAS;QACL,IAAI,EAAE,UAAU,CAApB,CAAA,CAAuB,qBAAqB,CAAC,IAAI,CAAjD,CAAA,CAAoD,qBAAqB,CAAC,EAAE;QACxE,OAAO,EAAE;YACP,qBAAqB,uBAAA;SACtB;KACF,CAAC;AACJ,CAAC;;;;;AD5HD;;;;;IAuCE,iCAAoB,OAAmB,EAAU,IAAY;QAAzC,IAAtB,CAAA,OAA6B,GAAP,OAAO,CAAY;QAAU,IAAnD,CAAA,IAAuD,GAAJ,IAAI,CAAQ;QAhB/D,IAAA,CAAA,QAAA,GAAuB,IAAI,YAAY,EAAuB,CAA9D;QACA,IAAA,CAAA,UAAA,GAAyB,IAAI,YAAY,EAAuB,CAAhE;QAEA,IAAA,CAAA,sBAAA,GAA4C,CAAC,CAA7C;QACA,IAAA,CAAA,wBAAA,GAA8C,GAAG,CAAjD;QACA,IAAA,CAAA,sBAAA,GAA4C,GAAG,CAA/C;QACA,IAAA,CAAA,sBAAA,GAA6C,KAAK,CAAlD;QACA,IAAA,CAAA,uBAAA,GAA0C,IAAI,CAA9C;QACA,IAAA,CAAA,YAAA,GAAmC,IAAI,CAAvC;QACA,IAAA,CAAA,cAAA,GAAqC,KAAK,CAA1C;QACA,IAAA,CAAA,UAAA,GAAiC,KAAK,CAAtC;QACA,IAAA,CAAA,cAAA,GAAqC,KAAK,CAA1C;QACA,IAAA,CAAA,QAAA,GAA+B,KAAK,CAApC;IAIA,CAAoE;;;;IAElE,iDAAe,GAAf;QACE,EAAJ,CAAA,CAAQ,CAAC,IAAI,CAAC,sBAAsB,CAApC,CAAsC,CAAtC;YACM,IAAI,CAAC,KAAK,EAAE,CAAC;QACnB,CAAK;IACL,CAAG;;;;;IAED,6CAAW,GAAX,UAAY,EAA0F;YAAxF,oDAAuB,EAAE,kDAAsB,EAAE,kDAAsB;QACnF,IAAJ,gBAAA,CAAU,gBAAgB,GAAG,gBAAgB,CAAC,uBAAuB,CAAC,CAAC;QACnE,IAAJ,gBAAA,CAAU,eAAe,GAAG,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;QACjE,IAAJ,gBAAA,CAAU,eAAe,GAAG,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;QACjE,IAAJ,gBAAA,CAAU,WAAW,GAAG,CAAC,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAzE;YACA,CAAO,eAAe,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,IAAI,eAAe,CAAC;QAE/E,EAAJ,CAAA,CAAQ,gBAAgB,IAAI,eAAe,IAAI,eAAe,CAA9D,CAAgE,CAAhE;YACM,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,EAAN,CAAA,CAAU,WAAW,CAArB,CAAuB,CAAvB;gBACQ,IAAI,CAAC,KAAK,EAAE,CAAC;YACrB,CAAO;QACP,CAAK;IACL,CAAG;;;;IAED,uCAAK,GAAL;QAAA,iBAiBC;QAhBC,EAAJ,CAAA,CAAQ,gBAAgB,EAAE,CAA1B,CAA4B,CAA5B;YACM,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAC1B,KAAI,CAAC,eAAe,GAAG,cAAc,CAAC;oBACpC,QAAQ,EAAE,KAAI,CAAC,QAAQ;oBACvB,cAAc,EAAE,KAAI,CAAC,cAAc;oBACnC,OAAO,EAAE,KAAI,CAAC,sBAAsB;oBACpC,YAAY,EAAE,KAAI,CAAC,sBAAsB;oBACzC,OAAO,EAAE,KAAI,CAAC,OAAO;oBACrB,UAAU,EAAE,KAAI,CAAC,UAAU;oBAC3B,eAAe,EAAE,KAAI,CAAC,uBAAuB;oBAC7C,YAAY,EAAE,KAAI,CAAC,YAAY;oBAC/B,QAAQ,EAAE,KAAI,CAAC,sBAAsB;oBACrC,UAAU,EAAE,KAAI,CAAC,wBAAwB;iBAC1C,CAAC,CAAC,SAAS,CAAC,UAAC,OAAY,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAA5B,CAA4B,CAAC,EAAjD,CAAiD,CAAC,CAAC;YAC1F,CAAO,CAAC,CAAC;QACT,CAAK;IACL,CAAG;;;;;IAED,gDAAc,GAAd,UAAe,EAAwC;YAAtC,cAAI,EAAE,oBAAO;QAC5B,MAAJ,CAAA,CAAY,IAAI,CAAhB,CAAA,CAAA;YACM,KAAK,qBAAqB,CAAC,IAAI;gBAC7B,MAAR,CAAe,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAErC,KAAK,qBAAqB,CAAC,EAAE;gBAC3B,MAAR,CAAe,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEvC;gBACE,MAAR,CAAe;QACf,CAAK;IACL,CAAG;;;;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAG;;;;IAED,iDAAe,GAAf;QACE,EAAJ,CAAA,CAAQ,IAAI,CAAC,eAAe,CAA5B,CAA8B,CAA9B;YACM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACzC,CAAK;IACL,CAAG;;CAtGH;;IAkBA,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,6DAA6D;aACxE,EAAD,EAAA;;;;IAjBA,EAAA,IAAA,EAAE,UAAU,GAAZ;IAGA,EAAA,IAAA,EAAE,MAAM,GAAR;;;IAiBA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,EAAA;IACA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,EAAA;IAEA,wBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,0BAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,wBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,wBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,yBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;;;;;;ADnCA;IAAA;;;CAAA;;IAIA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;gBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;gBAClC,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;aACd,EAAD,EAAA;;;;;GDAA;;;;;;;;;;;;;;GDEA;;;;;;;GDPA;;"}