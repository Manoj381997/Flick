"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var LoadingBarService_1 = require("./LoadingBarService");
var LoadingBar = (function () {
    // -------------------------------------------------------------------------
    // Constructor
    // -------------------------------------------------------------------------
    function LoadingBar(loadingBarService, router) {
        this.loadingBarService = loadingBarService;
        this.router = router;
        // -------------------------------------------------------------------------
        // Inputs / Outputs
        // -------------------------------------------------------------------------
        this.color = "#4092F1";
        this.height = 2;
        this.animationTime = 0.5;
        this.runInterval = 300;
        this.progress = 0;
        this.listenRouterEvents = false;
        // -------------------------------------------------------------------------
        // Public Properties
        // -------------------------------------------------------------------------
        this.visible = false;
    }
    // -------------------------------------------------------------------------
    // Lifecycle listeners
    // -------------------------------------------------------------------------
    LoadingBar.prototype.ngOnInit = function () {
        var _this = this;
        if (this.loadingBarService) {
            this.loadingBarService.onStart.subscribe(function () { return _this.start(); });
            this.loadingBarService.onStop.subscribe(function () { return _this.stop(); });
            this.loadingBarService.onReset.subscribe(function () { return _this.reset(); });
            this.loadingBarService.onComplete.subscribe(function () { return _this.complete(); });
        }
        if (this.listenRouterEvents) {
            this.routerEventSubscriber = this.router.events.subscribe(function (event) {
                if (!_this.routerEventsFilter || _this.routerEventsFilter(event)) {
                    if (event instanceof router_1.NavigationStart) {
                        _this.start();
                    }
                    else if (event instanceof router_1.NavigationEnd || event instanceof router_1.NavigationCancel || event instanceof router_1.NavigationError) {
                        _this.complete();
                    }
                }
            });
        }
    };
    LoadingBar.prototype.ngOnDestroy = function () {
        if (this.loadingBarService) {
            this.loadingBarService.onStart.unsubscribe();
            this.loadingBarService.onStop.unsubscribe();
            this.loadingBarService.onReset.unsubscribe();
            this.loadingBarService.onComplete.unsubscribe();
        }
        if (this.routerEventSubscriber) {
            this.routerEventSubscriber.unsubscribe();
        }
    };
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    LoadingBar.prototype.start = function () {
        var _this = this;
        this.stop();
        this.visible = true;
        this.runningInterval = setInterval(function () {
            _this.progress++;
            if (_this.progress === 100)
                _this.complete();
        }, this.runInterval);
    };
    LoadingBar.prototype.stop = function () {
        if (this.runningInterval) {
            clearInterval(this.runningInterval);
            this.runningInterval = null;
        }
    };
    LoadingBar.prototype.reset = function () {
        this.stop();
        this.progress = 0;
    };
    LoadingBar.prototype.complete = function () {
        var _this = this;
        this.progress = 100;
        this.stop();
        setTimeout(function () {
            _this.visible = false;
            setTimeout(function () {
                _this.progress = 0;
            }, _this.animationTime * 1000);
        }, this.animationTime * 1000);
    };
    return LoadingBar;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], LoadingBar.prototype, "color", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], LoadingBar.prototype, "height", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], LoadingBar.prototype, "animationTime", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], LoadingBar.prototype, "runInterval", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], LoadingBar.prototype, "progress", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], LoadingBar.prototype, "listenRouterEvents", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Function)
], LoadingBar.prototype, "routerEventsFilter", void 0);
LoadingBar = __decorate([
    core_1.Component({
        selector: "loading-bar",
        template: "\n<div class=\"loading-bar\">\n    <div class=\"loading-bar-progress\" \n        [style.width]=\"progress + '%'\" \n        [style.backgroundColor]=\"color\" \n        [style.color]=\"color\"\n        [style.height]=\"height + 'px'\" \n        [style.opacity]=\"visible ? 1 : 0\"\n        [style.-webkit-transition]=\"'all ' + animationTime + 's ease-in-out'\"\n        [style.-moz-transition]=\"'all ' + animationTime + 's ease-in-out'\"\n        [style.-o-transition]=\"'all ' + animationTime + 's ease-in-out'\"\n        [style.transition]=\"'all ' + animationTime + 's ease-in-out'\"></div>\n</div>\n",
        styles: ["\n.loading-bar {\n    position: fixed;\n    margin: 0;\n    padding: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 99999;\n}\n\n.loading-bar-progress {\n    margin: 0;\n    padding: 0;\n    z-index: 99998;\n    box-shadow: 0 0 10px 0;\n    height: 2px;\n    opacity: 0;\n}\n"]
    }),
    __param(0, core_1.Optional()),
    __metadata("design:paramtypes", [LoadingBarService_1.LoadingBarService,
        router_1.Router])
], LoadingBar);
exports.LoadingBar = LoadingBar;
//# sourceMappingURL=LoadingBar.js.map