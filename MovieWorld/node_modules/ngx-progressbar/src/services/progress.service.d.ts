import { Subject } from 'rxjs/Subject';
import { NgProgressState } from '../models/progress.state';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import 'rxjs/add/observable/timer';
import 'rxjs/add/operator/switchMap';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/takeWhile';
export declare class NgProgress {
    /** Initial state */
    initState: NgProgressState;
    /** Progress state */
    state: BehaviorSubject<NgProgressState>;
    /** Trickling stream */
    trickling: Subject<{}>;
    progress: number;
    maximum: number;
    minimum: number;
    speed: number;
    trickleSpeed: number;
    constructor();
    /** Start */
    start(): void;
    /** Done */
    done(): void;
    /** Increment the progress */
    inc(amount?: any): void;
    /** Set the progress */
    set(n: any): void;
    /**
     * Is progress started
     * @return {boolean}
     */
    isStarted(): boolean;
    /** Update the progress */
    private updateState(progress, isActive);
}
