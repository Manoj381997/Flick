{"version":3,"file":"ngx-progressbar.es5.js","sources":["../../index.ts","../../src/modules/progress.module.ts","../../src/components/progress.component.ts","../../src/components/progress-bar.component.ts","../../src/services/interceptor.provider.ts","../../src/services/browser-xhr.provider.ts","../../src/services/progress.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgProgress,NgProgressBrowserXhr,NgProgressInterceptor,NgProgressModule,NgProgressState} from './public_api';\n\nexport {ProgressBarComponent as ɵb} from './src/components/progress-bar.component';\nexport {ProgressComponent as ɵa} from './src/components/progress.component';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProgressBarComponent } from '../components/progress-bar.component';\r\nimport { ProgressComponent } from '../components/progress.component';\r\nimport { NgProgress } from '../services/progress.service';\nexport class NgProgressModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  declarations: [\r\n    ProgressComponent,\r\n    ProgressBarComponent\r\n  ],\r\n  exports: [\r\n    ProgressComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    NgProgress\r\n  ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgProgressModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProgressModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgProgressModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\r\n  Component, Input, ChangeDetectionStrategy, OnChanges, SimpleChanges\r\n} from '@angular/core';\r\nimport { NgProgress } from '../services/progress.service';\nexport class ProgressComponent implements OnChanges {\n/**\n * Progress options\n */\nease = 'linear';\r\n   positionUsing = 'margin';\r\n   showSpinner = true;\r\n   direction = 'leftToRightIncreased';\r\n   color = '#CC181E';\r\n   thick = false;\r\n   maximum = 1;\r\n   minimum = 0.08;\r\n   speed = 200;\r\n   trickleSpeed = 300;\n/**\n * Start/Stop Progressbar\n */\ntoggle;\n/**\n * @param {?} ngProgress\n */\nconstructor(public ngProgress: NgProgress) {\r\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\r\n\r\n    const /** @type {?} */ minChng = changes.minimum;\r\n    const /** @type {?} */ maxChng = changes.maximum;\r\n    const /** @type {?} */ spdChng = changes.speed;\r\n    const /** @type {?} */ tklSpdChng = changes.trickleSpeed;\r\n    const /** @type {?} */ tglChng = changes.toggle;\r\n\r\n    if (minChng) {\r\n      if (typeof minChng.currentValue !== 'undefined' && minChng.currentValue !== minChng.previousValue) {\r\n        if (minChng.currentValue < 0 || minChng.currentValue > 1) {\r\n          throw 'Input [minimum] must be between 0 and 1';\r\n        } else {\r\n          this.ngProgress.minimum = minChng.currentValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (maxChng) {\r\n      if (typeof maxChng.currentValue !== 'undefined' && maxChng.currentValue !== maxChng.previousValue) {\r\n        if (maxChng.currentValue < 0 || maxChng.currentValue > 1) {\r\n          throw 'Input [maximum] must be between 0 and 1';\r\n        } else {\r\n          this.ngProgress.maximum = maxChng.currentValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (spdChng) {\r\n      if (typeof spdChng.currentValue !== 'undefined' && spdChng.currentValue !== spdChng.previousValue) {\r\n        this.ngProgress.speed = spdChng.currentValue;\r\n      }\r\n    }\r\n\r\n    if (tklSpdChng) {\r\n      if (typeof tklSpdChng.currentValue !== 'undefined' && tklSpdChng.currentValue !== tklSpdChng.previousValue) {\r\n        this.ngProgress.trickleSpeed = tklSpdChng.currentValue;\r\n      }\r\n    }\r\n\r\n    if (tglChng) {\r\n      if (typeof tglChng.currentValue !== 'undefined' && tglChng.currentValue !== tglChng.previousValue) {\r\n        if (tglChng.currentValue) {\r\n          this.ngProgress.start();\r\n        } else {\r\n          this.ngProgress.done();\r\n        }\r\n      }\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'ng-progress',\r\n  template: `\r\n  <ng-progress-bar\r\n    [speed]=\"speed\"\r\n    [positionUsing]=\"positionUsing\"\r\n    [ease]=\"ease\"\r\n    [showSpinner]=\"showSpinner\"\r\n    [direction]=\"direction\"\r\n    [color]=\"color\"\r\n    [thick]=\"thick\"\r\n    [state]=\"ngProgress.state | async\"\r\n  ></ng-progress-bar>`,\r\n  styles: [`\r\n  :host {\r\n    z-index: 999999;\r\n    pointer-events: none;\r\n    position: relative;\r\n  }`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgProgress, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ease': [{ type: Input },],\n'positionUsing': [{ type: Input },],\n'showSpinner': [{ type: Input },],\n'direction': [{ type: Input },],\n'color': [{ type: Input },],\n'thick': [{ type: Input },],\n'maximum': [{ type: Input },],\n'minimum': [{ type: Input },],\n'speed': [{ type: Input },],\n'trickleSpeed': [{ type: Input },],\n'toggle': [{ type: Input },],\n};\n}\n\nfunction ProgressComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressComponent.ctorParameters;\n/** @type {?} */\nProgressComponent.propDecorators;\n/**\n * Progress options\n * @type {?}\n */\nProgressComponent.prototype.ease;\n/** @type {?} */\nProgressComponent.prototype.positionUsing;\n/** @type {?} */\nProgressComponent.prototype.showSpinner;\n/** @type {?} */\nProgressComponent.prototype.direction;\n/** @type {?} */\nProgressComponent.prototype.color;\n/** @type {?} */\nProgressComponent.prototype.thick;\n/** @type {?} */\nProgressComponent.prototype.maximum;\n/** @type {?} */\nProgressComponent.prototype.minimum;\n/** @type {?} */\nProgressComponent.prototype.speed;\n/** @type {?} */\nProgressComponent.prototype.trickleSpeed;\n/**\n * Start/Stop Progressbar\n * @type {?}\n */\nProgressComponent.prototype.toggle;\n/** @type {?} */\nProgressComponent.prototype.ngProgress;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { NgProgressState } from '../models/progress.state';\nexport class ProgressBarComponent {\r\n\r\n   state: NgProgressState;\r\n   positionUsing: string;\r\n   ease: string;\r\n   speed: number;\r\n   showSpinner: boolean;\r\n   direction: string;\r\n   thick: string;\r\n   color: string;\n/**\n * Styles for progressbar\n * @return {?}\n */\nbarStyles() {\r\n    let /** @type {?} */ styles = {\r\n      transition: `all ${this.speed}ms ${this.ease}`,\r\n      backgroundColor: this.color\r\n    };\n/**\n * Get positioning value\n */\nconst n = (!this.state.value) ? {\r\n      leftToRightIncreased: -100,\r\n      leftToRightReduced: 0,\r\n      rightToLeftIncreased: 100,\r\n      rightToLeftReduced: 0\r\n    }[this.direction] : this.toPercentage(this.state.value);\r\n\r\n    switch (this.positionUsing) {\r\n      case 'translate3d':\r\n        styles = Object.assign({}, styles, {\r\n          transform: `translate3d(${n}%,0,0)`,\r\n          '-webkit-transform': `translate3d(${n}%,0,0)`,\r\n          '-moz-transform': `translate3d(${n}%,0,0)`,\r\n          '-o-transform': `translate3d(${n}%,0,0)`,\r\n          '-ms-transform': `translate3d(${n}%,0,0)`\r\n        });\r\n        break;\r\n      case 'translate':\r\n        styles = Object.assign({}, styles, {\r\n          transform: `translate(${n}%,0)`,\r\n          '-webkit-transform': `translate(${n}%,0)`,\r\n          '-moz-transform': `translate(${n}%,0)`,\r\n          '-o-transform': `translate(${n}%,0)`,\r\n          '-ms-transform': `translate(${n}%,0)`\r\n        });\r\n        break;\r\n      default:\r\n        styles = Object.assign({}, styles, {\r\n          marginLeft: `${n}%`\r\n        });\r\n    }\r\n    return styles;\r\n  }\n/**\n * Styles for progressbar tail\n * @return {?}\n */\nshadowStyles() {\r\n    return {\r\n      boxShadow: `0 0 10px ${this.color}, 0 0 5px ${this.color}`\r\n    };\r\n  }\n/**\n * @param {?} n\n * @return {?}\n */\ntoPercentage(n) {\r\n    return ({\r\n      leftToRightIncreased: -1 + n,\r\n      leftToRightReduced: -n,\r\n      rightToLeftIncreased: 1 - n,\r\n      rightToLeftReduced: n\r\n    }[this.direction]) * 100;\r\n  }\n/**\n * @return {?}\n */\nspinnerClasses() {\r\n    return {\r\n      leftToRightIncreased: 'clockwise',\r\n      leftToRightReduced: 'anti-clockwise',\r\n      rightToLeftIncreased: 'anti-clockwise',\r\n      rightToLeftReduced: 'clockwise'\r\n    }[this.direction];\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'ng-progress-bar',\r\n  template: `\r\n  <div class=\"ng-progress\" *ngIf=\"state\" [class.active]=\"state.active\" [class.thick]=\"thick\">\r\n    <div class=\"bar\" [ngStyle]=\"barStyles()\">\r\n      <div class=\"bar-shadow\" [ngStyle]=\"shadowStyles()\"></div>\r\n    </div>\r\n    <div *ngIf=\"showSpinner\" class=\"spinner\" [ngClass]=\"spinnerClasses()\">\r\n      <div class=\"spinner-icon\" [style.borderTopColor]=\"color\" [style.borderLeftColor]=\"color\"></div>\r\n    </div>\r\n  </div>`,\r\n  styles: [`\r\n  .ng-progress {\r\n    z-index: 999999;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    position: fixed;\r\n    zoom: 1;\r\n    filter: alpha(opacity=0);\r\n    opacity: 0;\r\n    transition: opacity 200ms linear;\r\n  }\r\n\r\n  .active {\r\n    filter: alpha(opacity=100);\r\n    opacity: 1;\r\n    transition: none;\r\n  }\r\n\r\n  .bar {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 2px;\r\n  }\r\n\r\n  .thick .bar {\r\n    height: 3px;\r\n  }\r\n\r\n  .bar-shadow {\r\n    display: block;\r\n    position: absolute;\r\n    right: 0;\r\n    top: -3px;\r\n    width: 100px;\r\n    height: 100%;\r\n    opacity: 1.0;\r\n    -webkit-transform: rotate(3deg);\r\n    -ms-transform: rotate(3deg);\r\n    -moz-transform: rotate(3deg);\r\n    transform: rotate(3deg);\r\n  }\r\n\r\n\r\n  .thick .bar-shadow {\r\n    top: -4px;\r\n    -webkit-transform: rotate(4deg);\r\n    -ms-transform: rotate(4deg);\r\n    -moz-transform: rotate(4deg);\r\n    transform: rotate(4deg);\r\n  }\r\n\r\n  .thick .spinner-icon {\r\n    width: 24px;\r\n    height: 24px;\r\n    border: solid 3px transparent;\r\n  }\r\n\r\n  /* Remove these to get rid of the spinner */\r\n  .spinner {\r\n    display: block;\r\n    position: fixed;\r\n    z-index: 1031;\r\n    top: 15px;\r\n    right: 15px;\r\n  }\r\n\r\n  .spinner-icon {\r\n    width: 18px;\r\n    height: 18px;\r\n    box-sizing: border-box;\r\n\r\n    border: solid 2px transparent;\r\n    border-radius: 50%;\r\n\r\n    -webkit-animation: nprogress-spinner 400ms linear infinite;\r\n    -moz-animation: nprogress-spinner 400ms linear infinite;\r\n    animation: nprogress-spinner 400ms linear infinite;\r\n  }\r\n\r\n  .anti-clockwise .spinner-icon {\r\n    -webkit-animation-direction: reverse;\r\n    -moz-animation-direction: rotate(0deg);\r\n    animation-direction: reverse;\r\n  }\r\n\r\n  @-webkit-keyframes nprogress-spinner {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n      -moz-transform: rotate(0deg);\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n      -moz-transform: rotate(360deg);\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes nprogress-spinner {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n      -moz-transform: rotate(0deg);\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n      -moz-transform: rotate(360deg);\r\n      transform: rotate(360deg);\r\n    }\r\n  }`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'positionUsing': [{ type: Input },],\n'ease': [{ type: Input },],\n'speed': [{ type: Input },],\n'showSpinner': [{ type: Input },],\n'direction': [{ type: Input },],\n'thick': [{ type: Input },],\n'color': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.state;\n/** @type {?} */\nProgressBarComponent.prototype.positionUsing;\n/** @type {?} */\nProgressBarComponent.prototype.ease;\n/** @type {?} */\nProgressBarComponent.prototype.speed;\n/** @type {?} */\nProgressBarComponent.prototype.showSpinner;\n/** @type {?} */\nProgressBarComponent.prototype.direction;\n/** @type {?} */\nProgressBarComponent.prototype.thick;\n/** @type {?} */\nProgressBarComponent.prototype.color;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { NgProgress } from './progress.service';\r\nimport'rxjs/add/operator/finally';\nexport class NgProgressInterceptor implements HttpInterceptor {\n/**\n * @param {?} ngProgress\n */\nconstructor(public ngProgress: NgProgress) {\r\n  }\n/**\n * @param {?} req\n * @param {?} next\n * @return {?}\n */\nintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.ngProgress.start();\r\n    return next.handle(req).finally(() => {\r\n      this.ngProgress.done();\r\n    });\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgProgress, },\n];\n}\n\nfunction NgProgressInterceptor_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProgressInterceptor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgProgressInterceptor.ctorParameters;\n/** @type {?} */\nNgProgressInterceptor.prototype.ngProgress;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { BrowserXhr } from '@angular/http';\r\n\r\nimport { NgProgress } from './progress.service';\nexport class NgProgressBrowserXhr extends BrowserXhr {\nprivate currentRequest: number = 0;\n/**\n * @param {?} ngProgress\n */\nconstructor(private ngProgress: NgProgress) {\r\n    super();\r\n  }\n/**\n * @return {?}\n */\npublic build() {\r\n    const /** @type {?} */ xhr = super.build();\r\n\r\n    xhr.onload = (evt) => this.done();\r\n    xhr.onerror = (evt) => this.done();\r\n    xhr.onabort = (evt) => this.done();\r\n\r\n    xhr.onloadstart = (event) => {\r\n      this.currentRequest++;\r\n      if (!this.ngProgress.isStarted()) {\r\n        this.ngProgress.start();\r\n      }\r\n    };\r\n\r\n    return xhr;\r\n  }\n/**\n * @return {?}\n */\nprivate done() {\r\n    this.currentRequest--;\r\n    if (this.currentRequest === 0) {\r\n      this.ngProgress.done();\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgProgress, },\n];\n}\n\nfunction NgProgressBrowserXhr_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProgressBrowserXhr.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgProgressBrowserXhr.ctorParameters;\n/** @type {?} */\nNgProgressBrowserXhr.prototype.currentRequest;\n/** @type {?} */\nNgProgressBrowserXhr.prototype.ngProgress;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { NgProgressState } from '../models/progress.state';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport'rxjs/add/observable/timer';\r\nimport'rxjs/add/operator/switchMap';\r\nimport'rxjs/add/operator/do';\r\nimport'rxjs/add/operator/takeWhile';\n/**\n * Helper\n */\nconst clamp = (n, min, max) => {\r\n  if (n < min) {\r\n    return min;\r\n  }\r\n  if (n > max) {\r\n    return max;\r\n  }\r\n  return n;\r\n};\nexport class NgProgress {\n/**\n * Initial state\n */\ninitState: NgProgressState = {\r\n    active: false,\r\n    value: 0\r\n  };\n/**\n * Progress state\n */\nstate = new BehaviorSubject(this.initState);\n/**\n * Trickling stream\n */\ntrickling = new Subject();\r\n\r\n  progress = 0;\r\n  maximum = 1;\r\n  minimum = 0.08;\r\n  speed = 200;\r\n  trickleSpeed = 300;\nconstructor() {\r\n\r\n    this.trickling.switchMap(() => {\r\n      return Observable\r\n        .timer(0, this.trickleSpeed)\r\n        .takeWhile(() => this.isStarted())\r\n        .do(() => this.inc());\r\n    }).subscribe();\r\n  }\n/**\n * Start\n * @return {?}\n */\nstart() {\r\n    if (!this.isStarted()) {\r\n      this.set(this.minimum);\r\n    }\r\n    this.trickling.next();\r\n  }\n/**\n * Done\n * @return {?}\n */\ndone() {\r\n    /** if started, complete the progress */\r\n    if (this.isStarted()) {\r\n      this.set(.3 + .5 * Math.random());\r\n      this.set(this.maximum);\r\n    }\r\n  }\n/**\n * Increment the progress\n * @param {?=} amount\n * @return {?}\n */\ninc(amount?) {\r\n    let /** @type {?} */ n = this.progress;\r\n    /** if it hasn't start, start */\r\n    if (!this.isStarted()) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        if (n >= 0 && n < 0.2) {\r\n          amount = 0.1;\r\n        } else if (n >= 0.2 && n < 0.5) {\r\n          amount = 0.04;\r\n        } else if (n >= 0.5 && n < 0.8) {\r\n          amount = 0.02;\r\n        } else if (n >= 0.8 && n < 0.99) {\r\n          amount = 0.005;\r\n        } else {\r\n          amount = 0;\r\n        }\r\n      }\r\n      n = clamp(n + amount, 0, 0.994);\r\n      this.set(n);\r\n    }\r\n  }\n/**\n * Set the progress\n * @param {?} n\n * @return {?}\n */\nset(n) {\r\n    this.progress = clamp(n, this.minimum, this.maximum);\r\n    this.updateState(this.progress, true);\r\n    /** if progress completed */\r\n    if (n === this.maximum) {\r\n      const /** @type {?} */ hide = () => {\r\n        /**\r\n         *  reset the progress\r\n         *  Keep it { 0, false } to fadeOut progress-bar after complete\r\n         */\r\n        if (this.progress >= this.maximum) {\r\n          this.progress = 0;\r\n          this.updateState(this.progress, false);\r\n        }\r\n      };\r\n      const /** @type {?} */ complete = () => {\r\n        /**\r\n         * complete the progress\r\n         * { 1, false } to complete progress-bar before hiding\r\n         */\r\n        if (this.progress >= this.maximum) {\r\n          this.updateState(this.progress, false);\r\n          setTimeout(hide, this.speed);\r\n        }\r\n      };\r\n      setTimeout(complete, this.speed);\r\n    }\r\n  }\n/**\n * Is progress started\r\\@return {boolean}\n * @return {?}\n */\nisStarted(): boolean {\r\n    return this.progress > 0 && this.progress < this.maximum;\r\n  }\n/**\n * Update the progress\n * @param {?} progress\n * @param {?} isActive\n * @return {?}\n */\nprivate updateState(progress, isActive) {\r\n    this.state.next({\r\n      active: isActive,\r\n      value: progress\r\n    });\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgProgress_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProgress.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgProgress.ctorParameters;\n/**\n * Initial state\n * @type {?}\n */\nNgProgress.prototype.initState;\n/**\n * Progress state\n * @type {?}\n */\nNgProgress.prototype.state;\n/**\n * Trickling stream\n * @type {?}\n */\nNgProgress.prototype.trickling;\n/** @type {?} */\nNgProgress.prototype.progress;\n/** @type {?} */\nNgProgress.prototype.maximum;\n/** @type {?} */\nNgProgress.prototype.minimum;\n/** @type {?} */\nNgProgress.prototype.speed;\n/** @type {?} */\nNgProgress.prototype.trickleSpeed;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}